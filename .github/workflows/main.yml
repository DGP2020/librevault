name: CI
on:
  push:
    branches: [ master, develop, "feature/githubactions" ]
  pull_request:
    branches: [ master, develop, "feature/githubactions" ]
jobs:
  build-windows:
    runs-on: windows-2019
    env:
      CONAN_USER_HOME_SHORT: None
    steps:
      - name: Install system-wide dependencies
        run: |
          choco install --no-progress -r cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install innosetup
          python -m pip install poetry
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Prepare virtualenv for tools
        run: |
          python -m venv .venv
          poetry install
      - name: Restore Conan cache
        uses: actions/cache@v1
        env:
          cache-name: cache-conan-packages
        with:
          path: ~/.conan/data
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/conanfile.py') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/conanfile.py') }}-
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Install Conan packages
        run: |
          .venv\scripts\activate.ps1
          cd build
          conan profile new --detect --force default
          conan remote add -f --insert=0 librevault-builddeps https://api.bintray.com/conan/librevault/conan-builddeps
          conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          conan remote add -f gamepad64-public https://api.bintray.com/conan/gamepad64/public-conan
          conan remote add -f inexorgame https://api.bintray.com/conan/inexorgame/inexor-conan
          conan install .. --build=missing --build=cascade
          conan remove "*" --src --builds --force
      - name: Build application
        run: |
          cd build
          cmake -DUSE_STATIC_BOOST=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=built_binaries ..
          cmake --build . --config Release
      - name: Package application
        run: |
          .venv\scripts\activate.ps1
          cd build
          cmake --install .
          python ../scripts/configure_innosetup.py --packaging_dir pack --install_dir built_binaries
          pushd pack
          iscc librevault.iss
          popd
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: librevault-innosetup-windows-x64
          path: build/pack/result.exe

  build-linux:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Install system-wide dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bash git python3-pip python3.8-dev python3.8-venv build-essential cmake libwayland-dev libxcomposite-dev libglib2.0-dev mesa-common-dev ninja-build ccache
          sudo python3.8 -m pip install poetry
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Prepare virtualenv for tools
        run: |
          python3.8 -m venv .venv
          poetry install
      - name: Restore Conan cache
        uses: actions/cache@v1
        env:
          cache-name: cache-conan-packages
        with:
          path: ~/.conan/data
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/conanfile.py') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/conanfile.py') }}-
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Install Conan packages
        run: |
          source .venv/bin/activate
          cd build
          conan profile new --detect --force default
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan remote add -f --insert=0 librevault-builddeps https://api.bintray.com/conan/librevault/conan-builddeps
          conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          conan remote add -f gamepad64-public https://api.bintray.com/conan/gamepad64/public-conan
          conan remote add -f inexorgame https://api.bintray.com/conan/inexorgame/inexor-conan
          conan install .. --build=missing --build=cascade
          conan remove "*" --src --builds --force
      - name: Restore ccache cache
        uses: actions/cache@v1
        env:
          cache-name: cache-ccache
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Build application
        run: |
          cd build
          cmake .. -GNinja -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          cmake --build .

  build-linux-snap:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: snapcore/action-build@v1
        id: snapcraft
      - uses: actions/upload-artifact@v2
        with:
          name: librevault-snap-linux-x64
          path: ${{ steps.snapcraft.outputs.snap }}
      - uses: snapcore/action-publish@v1
        if: github.event_name == 'push'
        with:
          store_login: ${{ secrets.SNAPCRAFT_STORE_LOGIN }}
          snap: ${{ steps.snapcraft.outputs.snap }}
          release: edge

  build-macos:
    runs-on: macos-10.15
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - name: Install system-wide dependencies
        run: |
          brew install cmake ccache ninja
          python3 -m pip install poetry
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Prepare virtualenv for tools
        run: |
          python3 -m venv .venv
          poetry install
          source .venv/bin/activate
      - name: Restore Conan cache
        uses: actions/cache@v1
        env:
          cache-name: cache-conan-packages
        with:
          path: ~/.conan/data
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/conanfile.py') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/conanfile.py') }}-
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Install Conan packages
        run: |
          source .venv/bin/activate
          mkdir -p build
          pushd build
          conan profile new --detect --force default
          conan remote add -f --insert=0 librevault-builddeps https://api.bintray.com/conan/librevault/conan-builddeps
          conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          conan remote add -f gamepad64-public https://api.bintray.com/conan/gamepad64/public-conan
          conan remote add -f inexorgame https://api.bintray.com/conan/inexorgame/inexor-conan
          conan install .. --build=missing --build=cascade
          conan remove "*" --src --builds --force
      - name: Restore ccache cache
        uses: actions/cache@v1
        env:
          cache-name: cache-ccache
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}
      - name: Build application
        run: |
          mkdir -p build
          pushd build
          cmake .. -GNinja -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_OBJC_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../packaging
          cmake --build .
          cpack
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: librevault-dmg-macos-x64
          path: build/Librevault.dmg

  build-deps-windows:
    runs-on: windows-2019
    env:
      CONAN_USER_HOME_SHORT: None
    steps:
      - name: Install system-wide dependencies
        run: python -m pip install conan
      - uses: actions/checkout@v2
      - name: Install Conan packages
        run: |
          pushd build
          conan profile new --detect --force default
          conan remote add -f --insert=0 librevault-builddeps https://api.bintray.com/conan/librevault/conan-builddeps
          conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          conan remote add -f gamepad64-public https://api.bintray.com/conan/gamepad64/public-conan
          conan remote add -f inexorgame https://api.bintray.com/conan/inexorgame/inexor-conan
          conan install .. --build=missing --build=cascade
      - name: Upload Conan packages
        run: |
          conan user -p ${{ secrets.BINTRAY_API_KEY }} -r librevault-builddeps gamepad64
          conan upload "qt/*" -r librevault-builddeps --all --confirm
          conan upload "sqlite3/*" -r librevault-builddeps --all --confirm

  build-deps-linux:
    runs-on: ubuntu-20.04
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Install system-wide dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3-pip build-essential cmake libwayland-dev libxcomposite-dev libglib2.0-dev mesa-common-dev
          sudo python3 -m pip install conan
      - uses: actions/checkout@v2
      - name: Install Conan packages
        run: |
          pushd build
          conan profile new --detect --force default
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan remote add -f --insert=0 librevault-builddeps https://api.bintray.com/conan/librevault/conan-builddeps
          conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          conan remote add -f gamepad64-public https://api.bintray.com/conan/gamepad64/public-conan
          conan remote add -f inexorgame https://api.bintray.com/conan/inexorgame/inexor-conan
          conan install .. --build=missing --build=cascade
      - name: Upload Conan packages
        run: |
          conan user -p ${{ secrets.BINTRAY_API_KEY }} -r librevault-builddeps gamepad64
          conan upload "qt/*" -r librevault-builddeps --all --confirm
          conan upload "sqlite3/*" -r librevault-builddeps --all --confirm

  build-deps-macos:
    runs-on: macos-10.15
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - name: Install system-wide dependencies
        run: python3 -m pip install conan
      - uses: actions/checkout@v2
      - name: Install Conan packages
        run: |
          pushd build
          conan profile new --detect --force default
          conan remote add -f --insert=0 librevault-builddeps https://api.bintray.com/conan/librevault/conan-builddeps
          conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
          conan remote add -f gamepad64-public https://api.bintray.com/conan/gamepad64/public-conan
          conan remote add -f inexorgame https://api.bintray.com/conan/inexorgame/inexor-conan
          conan install .. --build=missing --build=cascade
      - name: Upload Conan packages
        run: |
          conan user -p ${{ secrets.BINTRAY_API_KEY }} -r librevault-builddeps gamepad64
          conan upload "qt/*" -r librevault-builddeps --all --confirm
          conan upload "sqlite3/*" -r librevault-builddeps --all --confirm
