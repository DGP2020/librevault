version: 2.1

orbs:
  win: circleci/windows@2.4.0

jobs:
  build-linux-docker:
    docker:
      - image: circleci/buildpack-deps:focal-scm
    environment:
      CONAN_CPU_COUNT: "2"
    steps:
      - checkout
      - run:
          command: |
            git submodule update --init --recursive
      - run:
          command: |
            sudo apt-get update
            sudo apt-get install python3-pip python3.8-dev build-essential cmake libwayland-dev libxcomposite-dev libglib2.0-dev ninja-build ccache
            sudo python3.8 -m pip install conan
      - restore_cache:
          keys:
            - conan-cache-v1-{{ arch }}-{{ checksum "conanfile.py" }}
            - conan-cache-v1-{{ arch }}
      - run:
          name: Install Conan dependencies
          command: |
            cd build
            conan profile new --detect --force default
            conan profile update settings.compiler.libcxx=libstdc++11 default
            conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
            conan install .. --build=missing --build=cascade
      - save_cache:
          key: conan-cache-v1-{{ arch }}-{{ checksum "conanfile.py" }}
          paths:
            - ~/.conan/data
      - restore_cache:
          keys:
            - ccache-cache-v1-{{ arch }}-{{ .Revision }}
            - ccache-cache-v1-{{ arch }}
      - run:
          name: Build application
          command: |
            cd build
            cmake .. -GNinja -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
            cmake --build .
      - save_cache:
          key: ccache-cache-v1-{{ arch }}-{{ .Revision }}
          paths:
            - ~/.ccache
  build-windows:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run:
          command: |
            git submodule update --init --recursive
      - run:
          shell: powershell.exe
          command: |
            choco install --no-progress -r cmake --installargs 'ADD_CMAKE_TO_PATH=System'
            python -m pip install conan
      - restore_cache:
          keys:
            - conan-cache-v1-{{ arch }}-{{ checksum "conanfile.py" }}
            - conan-cache-v1-{{ arch }}
            - conan-cache-v0-{{ arch }}-{{ checksum "conanfile.py" }}
            - conan-cache-v0-{{ arch }}
      - run:
          name: Install Conan dependencies
          command: |
            cd build
            conan profile new --detect --force default
            conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
            conan install .. --build=missing --build=cascade
      - save_cache:
          key: conan-cache-v1-{{ arch }}-{{ checksum "conanfile.py" }}
          paths:
            - "C:\\Users\\circleci\\.conan\\data"
            - "C:\\.conan"
  build-macos:
    macos:
      xcode: 11.4.0
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
      CONAN_CPU_COUNT: "2"
    steps:
      - checkout
      - run:
          command: |
            git submodule update --init --recursive
      - run:
          command: |
            brew install cmake ccache ninja
            python3 -m pip install conan
      - restore_cache:
          keys:
            - conan-cache-v0-{{ arch }}-{{ checksum "conanfile.py" }}
            - conan-cache-v0-{{ arch }}
      - run:
          name: Install Conan dependencies
          command: |
            cd build
            conan profile new --detect --force default
            conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
            conan install .. --build=missing --build=cascade
      - save_cache:
          key: conan-cache-v0-{{ arch }}-{{ checksum "conanfile.py" }}
          paths:
            - ~/.conan/data
      - restore_cache:
          keys:
            - ccache-cache-v1-{{ arch }}-{{ .Revision }}
            - ccache-cache-v1-{{ arch }}
      - run:
          name: Build application
          command: |
            cd build
            cmake .. -GNinja -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
            cmake --build .
      - save_cache:
          key: ccache-cache-v1-{{ arch }}-{{ .Revision }}
          paths:
            - ~/.ccache
workflows:
  version: 2
  build-multiplatform:
    jobs:
      - build-linux-docker
      - build-windows
      - build-macos
